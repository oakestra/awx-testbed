- name: Deploy components for 1DOC topology host ({{ group_1doc }})
  hosts: "{{ group_1doc }}"
  gather_facts: true
  tasks:
    - name: Retrieve {{ inventory_hostname }} hostname IP address
      set_fact:
        current_ip: "{{ hostvars[inventory_hostname].ansible_host | default(hostvars[inventory_hostname].ansible_ssh_host, 'IP address not found') }}"  

    - name: Check {{ inventory_hostname }} IP validity
      fail:
        msg: "IP address not found for current node {{ inventory_hostname }}"
      when: current_ip == "IP address not found"

    - name: Verify Oakestra repo is cloned (node {{ inventory_hostname }})
      include_role:
        name: ensure-oakestra-repo-is-cloned
      vars:
        path: "{{ oak_repo_path }}"
        repo: "{{ oak_repo_link }}"
        branch: "{{ oak_repo_branch }}"
        commit: "{{ oak_repo_commit }}"

    - name: Start 1DOC components (node {{ inventory_hostname }})
      include_role:
        name: start-1-doc
      vars:
        rootIP: "{{ current_ip }}"
        clusterName: "{{ inventory_hostname }}"
        clusterLocation: "Garching2"
        additionalComposeOverrides: "-f override-alpha-versions.yaml"

    - name: Set OAK_STATUS and OAK_ROLE by including role
      include_role:
        name: set-role-availability
      vars:
        role: "onedoc_{{ inventory_hostname }}"
        status: "busy"

    - name: Setup network manager entrypoint for node {{ inventory_hostname }}
      include_role:
        name: setup-net-manager
      vars:
        nodeIP: "{{ current_ip }}"
        clusterIP: "{{ current_ip }}"
        path: "{{ oak_net_repo_path }}"
        repo: "{{ oak_net_repo_link }}"
        branch: "{{ oak_net_repo_branch }}"
        commit: "{{ oak_net_repo_commit }}"

    - name: Ensure NetManager service is running on node {{ inventory_hostname }}
      systemd:
        name: netmanager
        state: started
        enabled: true
        daemon_reload: true
      become: true
      ignore_errors: false

    - name: Setup node engine entrypoint for node {{ inventory_hostname }}
      include_role:
        name: setup-node-engine
      vars:
        nodeIP: "{{ cluster_node_ip }}"
        clusterIP: "{{ cluster_node_ip }}"
        path: "{{ oak_repo_path }}"
        repo: "{{ oak_repo_link }}"
        branch: "{{ oak_repo_branch }}"
        commit: "{{ oak_repo_commit }}"

    - name: Start NodeEngine on {{ inventory_hostname }}
      environment:
        CLUSTER_IP: '{{ current_ip }}'
      shell: 'NodeEngine -n 6000 -a $CLUSTER_IP -p 10100 -d &'
      become: true
      ignore_errors: false

    - name: Ensure systemctl nodeengine service is running on node {{ inventory_hostname }}
      systemd:
        name: nodeengine
        state: started
        enabled: true
        daemon_reload: true
      become: true
      ignore_errors: false
