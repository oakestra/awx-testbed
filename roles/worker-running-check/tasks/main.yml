---
- name: Verify nodeengine service status
  systemd:
    name: nodeengine
    state: started
  become: true
  register: nodeengine_status
  ignore_errors: true

- name: Check if nodeengine service is running
  debug:
    msg: "NodeEngine service is running."
  when: nodeengine_status is defined and nodeengine_status.state == 'running'

- name: Verify netmanager service status
  systemd:
    name: netmanager
    state: started
  become: true
  register: netmanager_status
  ignore_errors: true

- name: Check if netmanager service is running
  debug:
    msg: "NetManager service is running."
  when: netmanager_status is defined and netmanager_status.state == 'running'

- name: Check if nodeengine.log contains "Error"
  command: grep -i 'error' /var/log/oakestra/nodeengine.log
  register: error_check
  ignore_errors: true

- name: Report if "Error" was found in nodeengine.log and display the errors
  debug:
    msg: "'Error' found in nodeengine.log:\n{{ error_check.stdout }}"
  when: error_check.stdout | length > 0
  ignore_errors: true

- name: Report if "Error" was not found in nodeengine.log
  debug:
    msg: "'Error' not found in nodeengine.log"
  when: error_check.stdout | length == 0
  ignore_errors: true

- name: Check if netmanager.log contains the word "Error"
  command: grep -i 'error' /var/log/oakestra/netmanager.log
  register: netmanager_error_check
  ignore_errors: true

- name: Report if "Error" was found in netmanager.log
  debug:
    msg: "'Error' found in netmanager.log:\n{{ netmanager_error_check.stdout }}"
  when: netmanager_error_check.stdout | length > 0

- name: Report if "Error" was not found in netmanager.log
  debug:
    msg: "'Error' not found in netmanager.log"
  when: netmanager_error_check.stdout | length == 0
